version: '1'

services:
  mysql:
    image: mysql:8.3
    container_name: mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./.db/mysql/data:/var/lib/mysql
      - ./.db/mysql/config:/etc/mysql/conf.d
    networks:
      - micro-commerce-network

  service-discovery:
    container_name: service-discovery
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - micro-commerce-network
    depends_on:
      - mysql

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - micro-commerce-network
    depends_on:
      service-discovery:
        condition: service_started

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - micro-commerce-network
    depends_on:
      service-discovery:
          condition: service_started

  member-service:
    container_name: micro-commerce-member
    build:
      context: ./micro-commerce-member
      dockerfile: Dockerfile
    environment:
      USE_PROFILE: dev
    networks:
      - micro-commerce-network
    depends_on:
      service-discovery:
        condition: service_started
      api-gateway:
        condition: service_started

  product-service:
    container_name: micro-commerce-product
    build:
      context: ./micro-commerce-product
      dockerfile: Dockerfile
    environment:
      USE_PROFILE: dev
    networks:
      - micro-commerce-network
    depends_on:
      service-discovery:
        condition: service_started
      api-gateway:
        condition: service_started

  order-service:
    container_name: micro-commerce-order
    build:
      context: ./micro-commerce-order
      dockerfile: Dockerfile
    environment:
      USE_PROFILE: dev
    networks:
      - micro-commerce-network
    depends_on:
      service-discovery:
        condition: service_started
      api-gateway:
        condition: service_started

networks:
  micro-commerce-network:
    driver: bridge